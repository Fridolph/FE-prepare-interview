import{_ as e,E as o,c as r,J as i,V as a,o as n}from"./chunks/framework.i1kO8Tor.js";const T=JSON.parse('{"title":"插入排序 Insertion Sort","description":"","frontmatter":{},"headers":[],"relativePath":"直击概念/03algo/s_sort_3-insertionSort.md","filePath":"直击概念/03algo/s_sort_3-insertionSort.md","lastUpdated":null}'),l={name:"直击概念/03algo/s_sort_3-insertionSort.md"},s=a('<h1 id="插入排序-insertion-sort" tabindex="-1">插入排序 Insertion Sort <a class="header-anchor" href="#插入排序-insertion-sort" aria-label="Permalink to &quot;插入排序 Insertion Sort&quot;">​</a></h1><h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h2><p>插入排序（Insertion-Sort）的算法描述是一种简单直观的排序算法。它的工作原理是通过构建<code>有序序列</code>，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入。插入排序在实现上，通常采用 in-place 排序（即只需用到 O(1)的额外空间的排序），因而在从后向前扫描过程中，需要反复把已排序元素逐步向后挪位，为最新元素提供插入空间。</p><h2 id="算法描述" tabindex="-1">算法描述 <a class="header-anchor" href="#算法描述" aria-label="Permalink to &quot;算法描述&quot;">​</a></h2><p>具体算法描述如下：</p><ol><li>从第一个元素开始，该元素可以认为已经被排序；</li><li>取出下一个元素，在已经排序的元素序列中从后向前扫描；</li><li>如果该元素（已排序）大于新元素，将该元素移到下一位置；</li><li>重复步骤 3，直到找到已排序的元素小于或者等于新元素的位置；</li><li>将新元素插入到该位置后；</li><li>重复步骤 2~5。</li></ol>',6),_=a('<h2 id="算法实现" tabindex="-1">算法实现 <a class="header-anchor" href="#算法实现" aria-label="Permalink to &quot;算法实现&quot;">​</a></h2><p><a href="./../../编写代码/03algo/c_sort_3-insertionSort/c_sort_3-insertionSort.html">插入排序实现</a></p><h2 id="算法分析" tabindex="-1">算法分析 <a class="header-anchor" href="#算法分析" aria-label="Permalink to &quot;算法分析&quot;">​</a></h2><ul><li>最佳情况：输入数组按升序排列。T(n) = O(n)</li><li>最坏情况：输入数组按降序排列。T(n) = O(n2)</li><li>平均情况：T(n) = O(n2)</li></ul><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><ul><li><a href="https://juejin.cn/post/6844903444365443080" target="_blank" rel="noreferrer">十大经典排序算法总结（JavaScript 描述）</a></li></ul>',6);function c(h,d,p,u,m,S){const t=o("Image");return n(),r("div",null,[s,i(t,{alt:"插入排序动图演示",src:"/03algo/insertionSort.gif"}),_])}const b=e(l,[["render",c]]);export{T as __pageData,b as default};
