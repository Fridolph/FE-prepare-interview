import{_ as t,c as a,o as l,V as e}from"./chunks/framework.i1kO8Tor.js";const _=JSON.parse('{"title":"HTTP","description":"","frontmatter":{},"headers":[],"relativePath":"面试官问/04http/q_http_2-http.md","filePath":"面试官问/04http/q_http_2-http.md","lastUpdated":1708674619000}'),i={name:"面试官问/04http/q_http_2-http.md"},o=e('<h1 id="http" tabindex="-1">HTTP <a class="header-anchor" href="#http" aria-label="Permalink to &quot;HTTP&quot;">​</a></h1><h2 id="http-headers" tabindex="-1">HTTP Headers <a class="header-anchor" href="#http-headers" aria-label="Permalink to &quot;HTTP Headers&quot;">​</a></h2><h3 id="请说一下-http-常用的状态码" tabindex="-1">请说一下 HTTP 常用的状态码 <a class="header-anchor" href="#请说一下-http-常用的状态码" aria-label="Permalink to &quot;请说一下 HTTP 常用的状态码&quot;">​</a></h3><details class="details custom-block"><summary>查看提示</summary><ul><li>1XX 信息响应，如 100 继续响应</li><li>2XX 请求成功 <ul><li>200 成功</li><li>204 成功但没拿到内容</li></ul></li><li>3XX 重定向 <ul><li>301 永久重定向</li><li>302 临时重定向</li><li>304 从缓存拿</li></ul></li><li>4XX 客户端错误 <ul><li>400 坏请求</li><li>401 客户端未验证</li><li>403 无权限</li><li>404 未找到</li><li>405 方法未被许可</li></ul></li><li>5XX 服务端错误 <ul><li>500 服务器错误 :::</li></ul></li></ul><h3 id="请说一下-http-常见请求头" tabindex="-1">请说一下 HTTP 常见请求头 <a class="header-anchor" href="#请说一下-http-常见请求头" aria-label="Permalink to &quot;请说一下 HTTP 常见请求头&quot;">​</a></h3><details class="details custom-block"><summary>查看提示 // todo:</summary></details></details><h3 id="请说一下-http-常见响应头" tabindex="-1">请说一下 HTTP 常见响应头 <a class="header-anchor" href="#请说一下-http-常见响应头" aria-label="Permalink to &quot;请说一下 HTTP 常见响应头&quot;">​</a></h3><details class="details custom-block"><summary>查看提示 // todo:</summary></details><h3 id="常见-content-type-类型有哪些" tabindex="-1">常见 Content-Type 类型有哪些 <a class="header-anchor" href="#常见-content-type-类型有哪些" aria-label="Permalink to &quot;常见 Content-Type 类型有哪些&quot;">​</a></h3><details class="details custom-block"><summary>详细信息</summary><ul><li><code>application/x-www-form-urlencoded</code>：用于 URL 编码的表单数据，数据以键值对的形式发送。</li><li><code>multipart/form-data</code>：用于发送带有文件上传的表单数据，可以包含文本字段和文件字段。</li><li><code>application/json</code>：用于发送 JSON 格式的数据。</li><li><code>text/plain</code>：用于发送纯文本数据。</li><li><code>application/xml</code>：用于发送 XML 格式的数据。</li><li><code>text/xml</code>：用于发送 XML 格式的数据，与 application/xml 类似，但将数据视为纯文本。</li><li><code>application/octet-stream</code> 用于发送任意的二进制数据</li></ul></details><p>Content-Type 用于指定请求中的主体数据的类型。根据你要发送的数据类型，选择合适的 Content-Type。在 Fetch API 中，你可以通过设置请求头部中的 Content-Type 字段来指定 Content-Type</p><h3 id="application-xml-和-text-xml-有啥区别" tabindex="-1">application/xml 和 text/xml 有啥区别 <a class="header-anchor" href="#application-xml-和-text-xml-有啥区别" aria-label="Permalink to &quot;application/xml 和 text/xml 有啥区别&quot;">​</a></h3><p>|特性|对象1|对象2|</p><h2 id="说下对-restful-api-的理解" tabindex="-1">说下对 Restful API 的理解 <a class="header-anchor" href="#说下对-restful-api-的理解" aria-label="Permalink to &quot;说下对 Restful API 的理解&quot;">​</a></h2><details class="details custom-block"><summary>查看提示</summary><ul><li>一种 API 的设计方法（约定）</li><li>传统 API 把每个 URL 当做一个功能</li><li>而 Restful API 设计 把每个 URL 当做一个唯一的资源</li></ul></details><h2 id="回顾" tabindex="-1">回顾 <a class="header-anchor" href="#回顾" aria-label="Permalink to &quot;回顾&quot;">​</a></h2><p><a href="./../../直击概念/04http/s_http_2-http_status_code.html">http status code</a></p>',15),s=[o];function r(c,d,h,n,p,u){return l(),a("div",null,s)}const T=t(i,[["render",r]]);export{_ as __pageData,T as default};
