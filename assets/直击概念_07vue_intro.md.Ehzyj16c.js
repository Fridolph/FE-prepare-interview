import{_ as e,c as t,o as a,V as o}from"./chunks/framework.cwIXGwyx.js";const f=JSON.parse('{"title":"Vue","description":"","frontmatter":{},"headers":[],"relativePath":"直击概念/07vue/intro.md","filePath":"直击概念/07vue/intro.md","lastUpdated":1708674619000}'),r={name:"直击概念/07vue/intro.md"},_=o('<h1 id="vue" tabindex="-1">Vue <a class="header-anchor" href="#vue" aria-label="Permalink to &quot;Vue&quot;">​</a></h1><blockquote><p>Vue 技术栈相关概念都整理到这里。 由于个人时间有限，这部分目前还没有来得及整理，我会在后续慢慢完善，请您谅解。 我暂时列出一个整理大纲。欢迎 Fork 本项目，和我一起来完善。</p></blockquote><p><a href="./../../面试官问/07vue/intro.html">面试官问 - Vue</a></p><ul><li><p><a href="./s_vue_1-reactive.html">Vue 响应式原理</a></p></li><li><p><a href="./s_vue_2-lifecycle.html">Vue 生命周期</a></p></li><li><p><a href="./s_vue_3-diff.html">Vue 中的 Diff 算法</a></p></li></ul>',4),i=[_];function l(u,s,c,n,p,d){return a(),t("div",null,i)}const m=e(r,[["render",l]]);export{f as __pageData,m as default};
