import{_ as t,E as o,c as r,J as l,V as a,o as n}from"./chunks/framework.i1kO8Tor.js";const f=JSON.parse('{"title":"堆排序 Heap Sort","description":"","frontmatter":{},"headers":[],"relativePath":"直击概念/03algo/s_sort_7-heapSort.md","filePath":"直击概念/03algo/s_sort_7-heapSort.md","lastUpdated":1708674619000}'),s={name:"直击概念/03algo/s_sort_7-heapSort.md"},i=a('<h1 id="堆排序-heap-sort" tabindex="-1">堆排序 Heap Sort <a class="header-anchor" href="#堆排序-heap-sort" aria-label="Permalink to &quot;堆排序 Heap Sort&quot;">​</a></h1><p>堆排序可以说是一种利用堆的概念来排序的选择排序。</p><h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h2><p>堆排序（Heapsort）是指利用堆这种数据结构所设计的一种排序算法。堆积是一个近似完全二叉树的结构，并同时满足堆积的性质：<strong>即子结点的键值或索引总是小于（或者大于）它的父节点</strong>。</p><h2 id="算法描述" tabindex="-1">算法描述 <a class="header-anchor" href="#算法描述" aria-label="Permalink to &quot;算法描述&quot;">​</a></h2><ol><li>将初始待排序关键字序列(R1,R2....Rn)构建成大顶堆，此堆为初始的无序区；</li><li>将堆顶元素 R[1]与最后一个元素 R[n]交换，此时得到新的无序区(R1,R2,......Rn-1)和新的有序区(Rn),且满足 R[1,2...n-1]&lt;=R[n]；</li><li>由于交换后新的堆顶 R[1]可能违反堆的性质，因此需要对当前无序区(R1,R2,......Rn-1)调整为新堆，然后再次将 R[1]与无序区最后一个元素交换，得到新的无序区(R1,R2....Rn-2)和新的有序区(Rn-1,Rn)。不断重复此过程直到有序区的元素个数为 n-1，则整个排序过程完成。</li></ol>',6),_=a('<h2 id="算法实现" tabindex="-1">算法实现 <a class="header-anchor" href="#算法实现" aria-label="Permalink to &quot;算法实现&quot;">​</a></h2><p><a href="./../../编写代码/03algo/c_sort_7-heapSort/c_sort_7-heapSort.html">堆排序实现</a></p><h2 id="算法分析" tabindex="-1">算法分析 <a class="header-anchor" href="#算法分析" aria-label="Permalink to &quot;算法分析&quot;">​</a></h2><ul><li>最佳情况：T(n) = O(nlogn)</li><li>最差情况：T(n) = O(nlogn)</li><li>平均情况：T(n) = O(nlogn)</li></ul><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><ul><li><a href="https://juejin.cn/post/6844903444365443080" target="_blank" rel="noreferrer">十大经典排序算法总结（JavaScript 描述）</a></li></ul>',6);function h(c,p,d,R,u,m){const e=o("Image");return n(),r("div",null,[i,l(e,{alt:"堆排序动图演示",src:"/03algo/heapSort.gif"}),_])}const g=t(s,[["render",h]]);export{f as __pageData,g as default};
