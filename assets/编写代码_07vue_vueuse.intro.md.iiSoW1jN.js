import{_ as e,c as p,o as t,V as s}from"./chunks/framework.cwIXGwyx.js";const f=JSON.parse('{"title":"VueUse","description":"","frontmatter":{},"headers":[],"relativePath":"编写代码/07vue/vueuse.intro.md","filePath":"编写代码/07vue/vueuse.intro.md","lastUpdated":1709476728000}'),a={name:"编写代码/07vue/vueuse.intro.md"},r=s('<h1 id="vueuse" tabindex="-1">VueUse <a class="header-anchor" href="#vueuse" aria-label="Permalink to &quot;VueUse&quot;">​</a></h1><p>VueUse 是一个包含 100 多个 Vue 组合式函数的集合。代码简洁，易于阅读和理解。值得学习，就按官网顺序列举了，有时间慢慢敲一遍</p><h2 id="state" tabindex="-1">State <a class="header-anchor" href="#state" aria-label="Permalink to &quot;State&quot;">​</a></h2><p>✔️ createGlobalState</p><p>createInjectionState</p><p>createSharedComposable</p><p>useAsyncState</p><p>useDebouncedRefHistory</p><p>useLastChanged</p><p>useLocalStorage</p><p>useManualRefHistory</p><p>useRefHistory</p><p>useSessionStorage</p><p>useStorage</p><p>useStorageAsync</p><p>useThrottledRefHistory</p><h2 id="elements" tabindex="-1">Elements <a class="header-anchor" href="#elements" aria-label="Permalink to &quot;Elements&quot;">​</a></h2><p>useActiveElement</p><p>useDocumentVisibility</p><p>useDraggable</p><p>useDropZone</p><p>useElementBounding</p><p>useElementSize</p><p>useElementVisibility</p><p>useIntersectionObserver</p><p>useMouseInElement</p><p>useMutationObserver</p><p>useResizeObserver</p><p>useWindowFocus</p><p>useWindowScroll</p><p>useWindowSize</p><h2 id="browser" tabindex="-1">Browser <a class="header-anchor" href="#browser" aria-label="Permalink to &quot;Browser&quot;">​</a></h2><p>useBluetooth</p><p>useBreakpoints</p><p>useBroadcastChannel</p><p>useBrowserLocation</p><p>useClipboard</p><p>useColorMode</p><p>useCssVar</p><p>useDark</p><p>useEventListener</p><p>useEyeDropper</p><p>useFavicon</p><p>useFileDialog</p><p>useFileSystemAccess</p><p>useFullscreen</p><p>useGamepad</p><p>useImage</p><p>useMediaControls</p><p>useMediaQuery</p><p>useMemory</p><p>useObjectUrl</p><p>usePermission</p><p>usePreferredColorScheme</p><p>usePreferredContrast</p><p>usePreferredDark</p><p>usePreferredLanguages</p><p>usePreferredReducedMotion</p><p>useScreenOrientation</p><p>useScreenSafeArea</p><p>useScriptTag</p><p>useShare</p><p>useStyleTag</p><p>useTextareaAutosize</p><p>useTextDirection</p><p>useTitle</p><p>useUrlSearchParams</p><p>useVibrate</p><p>useWakeLock</p><p>useWebNotification</p><p>useWebWorker</p><p>useWebWorkerFn</p><h2 id="sensors" tabindex="-1">Sensors <a class="header-anchor" href="#sensors" aria-label="Permalink to &quot;Sensors&quot;">​</a></h2><p>onClickOutside</p><p>onKeyStroke</p><p>onLongPress</p><p>onStartTyping</p><p>useBattery</p><p>useDeviceMotion</p><p>useDeviceOrientation</p><p>useDevicePixelRatio</p><p>useDevicesList</p><p>useDisplayMedia</p><p>useElementByPoint</p><p>useElementHover</p><p>useFocus</p><p>useFocusWithin</p><p>useFps</p><p>useGeolocation</p><p>useIdle</p><p>useInfiniteScroll</p><p>useKeyModifier</p><p>useMagicKeys</p><p>useMouse</p><p>useMousePressed</p><p>useNavigatorLanguage</p><p>useNetwork</p><p>useOnline</p><p>usePageLeave</p><p>useParallax</p><p>usePointer</p><p>usePointerLock</p><p>usePointerSwipe</p><p>useScroll</p><p>useScrollLock</p><p>useSpeechRecognition</p><p>useSpeechSynthesis</p><p>useSwipe</p><p>useTextSelection</p><p>useUserMedia</p><h2 id="network" tabindex="-1">Network <a class="header-anchor" href="#network" aria-label="Permalink to &quot;Network&quot;">​</a></h2><p>useEventSource</p><p>useFetch</p><p>useWebSocket</p><h2 id="animation" tabindex="-1">Animation <a class="header-anchor" href="#animation" aria-label="Permalink to &quot;Animation&quot;">​</a></h2><p>useInterval</p><p>useIntervalFn</p><p>useNow</p><p>useRafFn</p><p>useTimeout</p><p>useTimeoutFn</p><p>useTimestamp</p><p>useTransition</p><h2 id="component" tabindex="-1">Component <a class="header-anchor" href="#component" aria-label="Permalink to &quot;Component&quot;">​</a></h2><p>computedInject</p><p>templateRef</p><p>tryOnBeforeMount</p><p>tryOnBeforeUnmount</p><p>tryOnMounted</p><p>tryOnScopeDispose</p><p>tryOnUnmounted</p><p>unrefElement</p><p>useCurrentElement</p><p>useMounted</p><p>useTemplateRefsList</p><p>useVirtualList</p><p>useVModel</p><p>useVModels</p><h2 id="watch" tabindex="-1">Watch <a class="header-anchor" href="#watch" aria-label="Permalink to &quot;Watch&quot;">​</a></h2><p>until</p><p>watchArray</p><p>watchAtMost</p><p>watchDebounced</p><p>watchIgnorable</p><p>watchOnce</p><p>watchPausable</p><p>watchThrottled</p><p>watchTriggerable</p><p>watchWithFilter</p><p>whenever</p><h2 id="reactivity" tabindex="-1">Reactivity <a class="header-anchor" href="#reactivity" aria-label="Permalink to &quot;Reactivity&quot;">​</a></h2><p>computedAsync</p><p>computedEager</p><p>computedWithControl</p><p>extendRef</p><p>reactify</p><p>reactifyObject</p><p>reactiveComputed</p><p>reactiveOmit</p><p>reactivePick</p><p>refAutoReset</p><p>refDebounced</p><p>refDefault</p><p>refThrottled</p><p>refWithControl</p><p>resolveRef</p><p>resolveUnref</p><p>syncRef</p><p>syncRefs</p><p>toReactive</p><p>toRefs</p><h2 id="array" tabindex="-1">Array <a class="header-anchor" href="#array" aria-label="Permalink to &quot;Array&quot;">​</a></h2><p>useArrayEvery</p><p>useArrayFilter</p><p>useArrayFind</p><p>useArrayFindIndex</p><p>useArrayFindLast</p><p>useArrayJoin</p><p>useArrayMap</p><p>useArrayReduce</p><p>useArraySome</p><p>useArrayUnique</p><p>useSorted</p><h2 id="time" tabindex="-1">Time <a class="header-anchor" href="#time" aria-label="Permalink to &quot;Time&quot;">​</a></h2><p>useDateFormat</p><p>useTimeAgo</p><h2 id="utilities" tabindex="-1">Utilities <a class="header-anchor" href="#utilities" aria-label="Permalink to &quot;Utilities&quot;">​</a></h2><p>createEventHook</p><p>createUnrefFn</p><p>get</p><p>isDefined</p><p>makeDestructurable</p><p>set</p><p>useAsyncQueue</p><p>useBase64</p><p>useCached</p><p>useCloned</p><p>useConfirmDialog</p><p>useCounter</p><p>useCycleList</p><p>useDebounceFn</p><p>useEventBus</p><p>useMemoize</p><p>useOffsetPagination</p><p>usePrevious</p><p>useStepper</p><p>useSupported</p><p>useThrottleFn</p><p>useTimeoutPoll</p><p>useToggle</p><p>useToNumber</p><p>useToString</p>',212),o=[r];function u(i,n,l,c,d,h){return t(),p("div",null,o)}const b=e(a,[["render",u]]);export{f as __pageData,b as default};
