import{_ as e,E as r,c as o,J as l,V as a,o as i}from"./chunks/framework.i1kO8Tor.js";const m=JSON.parse('{"title":"桶排序 Bucket Sort","description":"","frontmatter":{},"headers":[],"relativePath":"直击概念/03algo/s_sort_9-bucketSort.md","filePath":"直击概念/03algo/s_sort_9-bucketSort.md","lastUpdated":null}'),n={name:"直击概念/03algo/s_sort_9-bucketSort.md"},c=a('<h1 id="桶排序-bucket-sort" tabindex="-1">桶排序 Bucket Sort <a class="header-anchor" href="#桶排序-bucket-sort" aria-label="Permalink to &quot;桶排序 Bucket Sort&quot;">​</a></h1><p>桶排序是计数排序的升级版。它利用了函数的映射关系，高效与否的关键就在于这个映射函数的确定。</p><h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h2><p>桶排序 (Bucket sort)的工作的原理：假设输入数据服从均匀分布，将数据分到有限数量的桶里，每个桶再分别排序（有可能再使用别的排序算法或是以递归方式继续使用桶排序进行排</p><h2 id="算法描述" tabindex="-1">算法描述 <a class="header-anchor" href="#算法描述" aria-label="Permalink to &quot;算法描述&quot;">​</a></h2><ol><li>设置一个定量的数组当作空桶；</li><li>遍历输入数据，并且把数据一个一个放到对应的桶里去；</li><li>对每个不是空的桶进行排序；</li><li>从不是空的桶里把排好序的数据拼接起来。</li></ol>',6),s=a('<h2 id="算法实现" tabindex="-1">算法实现 <a class="header-anchor" href="#算法实现" aria-label="Permalink to &quot;算法实现&quot;">​</a></h2><p><a href="./../../编写代码/03algo/c_sort_9-bucketSort/c_sort_9-bucketSort.html">桶排序</a></p><h2 id="算法分析" tabindex="-1">算法分析 <a class="header-anchor" href="#算法分析" aria-label="Permalink to &quot;算法分析&quot;">​</a></h2><blockquote><p>桶排序最好情况下使用线性时间 O(n)，桶排序的时间复杂度，取决与对各个桶之间数据进行排序的时间复杂度，因为其它部分的时间复杂度都为 O(n)。很显然，桶划分的越小，各个桶之间的数据越少，排序所用的时间也会越少。但相应的空间消耗就会增大。</p></blockquote><ul><li>最佳情况：T(n) = O(n+k)</li><li>最差情况：T(n) = O(n+k)</li><li>平均情况：T(n) = O(n2)</li></ul><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><ul><li><a href="https://juejin.cn/post/6844903444365443080" target="_blank" rel="noreferrer">十大经典排序算法总结（JavaScript 描述）</a></li><li><a href="https://algo.itcharge.cn/01.Array/02.Array-Sort/09.Array-Bucket-Sort/" target="_blank" rel="noreferrer">算法通关手册 - 桶排序</a></li></ul>',7);function _(h,u,d,k,p,b){const t=r("Image");return i(),o("div",null,[c,l(t,{alt:"桶排序动图演示",src:"/03algo/bucketSort.png"}),s])}const f=e(n,[["render",_]]);export{m as __pageData,f as default};
