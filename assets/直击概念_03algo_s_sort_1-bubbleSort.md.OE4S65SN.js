import{_ as t,E as o,c as l,J as r,V as a,o as s}from"./chunks/framework.i1kO8Tor.js";const S=JSON.parse('{"title":"冒泡排序","description":"","frontmatter":{},"headers":[],"relativePath":"直击概念/03algo/s_sort_1-bubbleSort.md","filePath":"直击概念/03algo/s_sort_1-bubbleSort.md","lastUpdated":1708674619000}'),i={name:"直击概念/03algo/s_sort_1-bubbleSort.md"},_=a('<h1 id="冒泡排序" tabindex="-1">冒泡排序 <a class="header-anchor" href="#冒泡排序" aria-label="Permalink to &quot;冒泡排序&quot;">​</a></h1><p>冒泡排序是一种简单的排序算法。它重复地走访过要排序的数列，一次比较两个元素，如果它们的顺序错误就把它们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。这个算法的名字由来是因为越小的元素会经由交换慢慢“浮”到数列的顶端。</p><h2 id="算法描述和实现" tabindex="-1">算法描述和实现 <a class="header-anchor" href="#算法描述和实现" aria-label="Permalink to &quot;算法描述和实现&quot;">​</a></h2><ol><li>比较相邻的元素。如果第一个比第二个大，就交换它们两个；</li><li>对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对，这样在最后的元素应该会是最大的数；</li><li>针对所有的元素重复以上的步骤，除了最后一个；</li><li>重复步骤 1~3，直到排序完成。</li></ol><p><a href="./../../编写代码/03algo/c_sort_1-bubbleSort/c_sort_1-bubbleSort.html">冒泡排序的实现</a></p><h2 id="冒泡排序动图演示" tabindex="-1">冒泡排序动图演示 <a class="header-anchor" href="#冒泡排序动图演示" aria-label="Permalink to &quot;冒泡排序动图演示&quot;">​</a></h2>',6),n=a('<h2 id="算法分析" tabindex="-1">算法分析 <a class="header-anchor" href="#算法分析" aria-label="Permalink to &quot;算法分析&quot;">​</a></h2><ul><li>最佳情况：T(n) = O(n)</li><li>最差情况：T(n) = O(n2)</li><li>平均情况：T(n) = O(n2)</li></ul><h2 id="算法改进" tabindex="-1">算法改进 <a class="header-anchor" href="#算法改进" aria-label="Permalink to &quot;算法改进&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">改进冒泡排序：</p><p>设置一标志性变量 pos,用于记录每趟排序中最后一次进行交换的位置。由于 pos 位置之后的记录均已交换到位,故在进行下一趟排序时只要扫描到 pos 位置即可。</p></div><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><ul><li><a href="https://juejin.cn/post/6844903444365443080" target="_blank" rel="noreferrer">https://juejin.cn/post/6844903444365443080</a></li></ul>',6);function c(h,d,b,u,p,m){const e=o("Image");return s(),l("div",null,[_,r(e,{src:"/03algo/bubbleSort.gif",alt:"冒泡排序动图演示"}),n])}const T=t(i,[["render",c]]);export{S as __pageData,T as default};
