import{_ as t,c as a,o as e,V as s}from"./chunks/framework.i1kO8Tor.js";const m=JSON.parse('{"title":"HTTPS","description":"","frontmatter":{},"headers":[],"relativePath":"面试官问/04http/q_http_4-https.md","filePath":"面试官问/04http/q_http_4-https.md","lastUpdated":1708674619000}'),l={name:"面试官问/04http/q_http_4-https.md"},o=s('<h1 id="https" tabindex="-1">HTTPS <a class="header-anchor" href="#https" aria-label="Permalink to &quot;HTTPS&quot;">​</a></h1><p><a href="./../../直击概念/04http/s_http_5-https.html">直击概念 - https</a></p><h2 id="为什么使用-https" tabindex="-1">为什么使用 HTTPS <a class="header-anchor" href="#为什么使用-https" aria-label="Permalink to &quot;为什么使用 HTTPS&quot;">​</a></h2><details class="details custom-block"><summary>提示</summary><ul><li>http 是明文传输，敏感信息容易被中间劫持</li><li>https s 为 SSL，加密传输，更加安全</li><li>现代浏览器 <s>建议</s> 强制使用 https 协议</li></ul></details><h2 id="那说一下-https-是如何加密的" tabindex="-1">那说一下 HTTPS 是如何加密的 <a class="header-anchor" href="#那说一下-https-是如何加密的" aria-label="Permalink to &quot;那说一下 HTTPS 是如何加密的&quot;">​</a></h2><p>前提：</p><p>当客户端（比如浏览器）发起 HTTPS 请求时，服务器会<code>返回一个数字证书</code>，这个证书包含了服务器的公钥以及与之相关的信息。数字证书通常由可信的第三方证书颁发机构（<code>CA</code>，Certificate Authority）颁发。</p><p>一旦客户端收到服务器的数字证书，它会<code>验证证书的有效性</code>，并使用<code>服务器的公钥进行加密通信</code>。</p><details class="details custom-block"><summary>客户端和服务器之间的加密通信过程大致可以分为以下几个步骤：</summary><ol><li>握手：客户端向服务器发送一个用于建立安全通道的请求，服务器会回复一个包含数字证书的响应。</li><li>验证：客户端验证服务器的数字证书，确认其有效性并提取出服务器的公钥。</li><li>密钥交换：客户端生成一个随机的对称密钥，用服务器的公钥加密后传输给服务器。</li><li>加密通信：服务器接收到客户端发送的加密密钥后，使用自己的私钥进行解密，得到对称密钥。以后的通信将使用这个对称密钥进行加密和解密。</li></ol><p>通过这种方式，客户端和服务器之间的通信内容就能够得到保护，第三方无法窃取或篡改通信内容。这就是 HTTPS 用来保护网络通信安全的加密过程。</p></details>',9),i=[o];function h(p,r,c,d,_,n){return e(),a("div",null,i)}const u=t(l,[["render",h]]);export{m as __pageData,u as default};
