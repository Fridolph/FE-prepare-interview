import{_ as t,E as o,c as l,J as r,V as e,o as i}from"./chunks/framework.VAJu91au.js";const f=JSON.parse('{"title":"队列","description":"","frontmatter":{},"headers":[],"relativePath":"直击概念/03algo/s_algo_2-queue.md","filePath":"直击概念/03algo/s_algo_2-queue.md","lastUpdated":1708674619000}'),c={name:"直击概念/03algo/s_algo_2-queue.md"},s=e('<h1 id="队列" tabindex="-1">队列 <a class="header-anchor" href="#队列" aria-label="Permalink to &quot;队列&quot;">​</a></h1><p>与栈类似，队列也是一个线性数据结构。与栈不同的是，队列只删除最先添加的数据。</p><blockquote><p>为了帮助你明白队列是如何工作的，让我们花点时间举个例子。我们可以把队列想象成为熟食店的售票系统。每个顾客拿一张票，当他们的号码被呼叫时接受服务。持第一张票的顾客首先接受服务。</p></blockquote><p>队列的一个更实际的例子是 Web 浏览器的事件循环。当触发不同事件时，例如单击某个按钮，点击事件将被添加到事件循环队列中，并按照它们进入队列的顺序进行处理。</p><h2 id="队列的操作" tabindex="-1">队列的操作 <a class="header-anchor" href="#队列的操作" aria-label="Permalink to &quot;队列的操作&quot;">​</a></h2><p>现在我们具有了队列的概念，接下来就要定义它的操作。你会注意到，队列的操作和栈非常相似。区别就在被删除的数据在什么地方。</p><ul><li>enqueue(data) 将数据添加到队列中。</li><li>dequeue 删除最早加入队列的数据。</li></ul>',7),_=e('<h2 id="队列的属性" tabindex="-1">队列的属性 <a class="header-anchor" href="#队列的属性" aria-label="Permalink to &quot;队列的属性&quot;">​</a></h2><ul><li><code>oldestIndex</code></li><li><code>newestIndex</code></li><li><code>storage</code></li></ul><h2 id="队列的完整实现" tabindex="-1">队列的完整实现 <a class="header-anchor" href="#队列的完整实现" aria-label="Permalink to &quot;队列的完整实现&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">跳转到编写代码</p><p><a href="./../../编写代码/03algo/c_algo_2-queue/c_algo_2-queue.html">队列的实现 Queue</a></p></div><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><ul><li><a href="https://juejin.cn/post/6844903758887911431" target="_blank" rel="noreferrer">用 JavaScript 实现栈与队列</a></li><li><a href="https://algo.itcharge.cn/04.Queue/01.Queue-Basic/01.Queue-Basic/" target="_blank" rel="noreferrer">算法通关手册 - 队列基础知识</a></li></ul>',6);function u(n,d,h,p,m,g){const a=o("Image");return i(),l("div",null,[s,r(a,{src:"/03algo/queue.png",alt:"队列的基本操作"}),_])}const b=t(c,[["render",u]]);export{f as __pageData,b as default};
