import{_ as l,c as i,o as a,V as e}from"./chunks/framework.GzbH9VPN.js";const m=JSON.parse('{"title":"自我介绍","description":"","frontmatter":{},"headers":[],"relativePath":"面试官问/00me/1说-自我介绍.md","filePath":"面试官问/00me/1说-自我介绍.md","lastUpdated":null}'),t={name:"面试官问/00me/1说-自我介绍.md"},r=e('<h1 id="自我介绍" tabindex="-1">自我介绍 <a class="header-anchor" href="#自我介绍" aria-label="Permalink to &quot;自我介绍&quot;">​</a></h1><ul><li>履历：16 年毕业 通信工程专业，最近 7 年都在网思科平工作，今年 1 月离职</li><li>业务：公司做网络安全，ToB 政企项目，主要负责 EDR-终端侦测与响应平台，Admin 综合管理后台，以及安全分析大屏 这三个项目</li><li>角色：30 人研发团队，4 人小团队，担任前端组长</li><li>职责：主要负责 项目基础架构、技术选型与重构，还有团队建设</li><li>个人技术栈： <ul><li>Vue 全家桶 + TS + Webpack + Vite</li><li>UI 库（ElementUI + iView + NaiveUI + TailWindCSS）</li><li>可视化：Echarts + D3.js</li></ul></li></ul><p>接下来简单说下公司情况：</p><ul><li>技术栈 Vue 全家桶</li><li>敏捷开发模式</li><li>18 年 9 月第一次产品发布，截止离职前迭代到 4 个大版本。2022 年，我主导了架构升级到 Vue3，相关依赖库进行更新，如 Webpack 5，Echarts 5，vue-router，vuex 升级到 Pinia。</li><li>团队建设上，主导了公司内 wskp-Design（参考 ant-design）组件库（基础组件及业务组件二次封装），更新了在线文档提供对应 Demo，方便与 UI、产品同事交流与协作</li></ul><p>我的工作经历大概这些，您看下有什么想了解的，我再接着补充。</p><h1 id="项目介绍" tabindex="-1">项目介绍 <a class="header-anchor" href="#项目介绍" aria-label="Permalink to &quot;项目介绍&quot;">​</a></h1><h2 id="edr-终端威胁与响应平台" tabindex="-1">EDR 终端威胁与响应平台 <a class="header-anchor" href="#edr-终端威胁与响应平台" aria-label="Permalink to &quot;EDR 终端威胁与响应平台&quot;">​</a></h2><ul><li>简介和功能：综合展示系统，服务于甲方政企单位。可检测电脑的安全性，提供安全预警和威胁溯源</li><li>基本流程 <ol><li>安装 Agent</li><li>探针检测相关信息发送到服务端</li><li>前端综合展示信息</li></ol></li><li>技术栈： <ul><li>Vue 全家桶 + TS + Webpack + NaiveUI</li><li>可视化：Echarts + D3.js</li></ul></li><li>前端组长，搭建项目基础架构，进行 Vue3 重构</li></ul><h2 id="项目难点" tabindex="-1">项目难点 <a class="header-anchor" href="#项目难点" aria-label="Permalink to &quot;项目难点&quot;">​</a></h2><h3 id="告警列表-table展示" tabindex="-1">告警列表，Table展示 <a class="header-anchor" href="#告警列表-table展示" aria-label="Permalink to &quot;告警列表，Table展示&quot;">​</a></h3><ul><li>背景: 客户端检测到很多告警信息，汇总为表格，在前端展示</li><li>难点：接口返回数据，数据量大、信息量大，整理、过滤、处理信息</li><li>现象: 渲染卡顿；loading较久。原因就是信息量比较大、数据结构也比较复杂(如嵌套层级比较多)计算量大</li><li>方案：vxe-table 封装了很多功能(如 abc)，比较符合这个复杂的应用场景(类型多，信息量大)， <ul><li>如果用 ElementUl iView Table：1. 需要从 0 自己封装；2. 复杂度达不到预期（自定义排序、导出、编辑等）</li></ul></li><li>如何解决 <ul><li>vxe-table 提供虚拟列表，减少DOM操作，提升性能</li><li>加入 webWorker 进行并发计算，更快拿到处理后的数据</li></ul></li><li>结果 <ul><li>有效解决卡顿问题</li><li>page-size 50 条时，也不会出现长时等待</li></ul></li><li>【补充】除了以上性能优化的难点之外，vxe-table 还有很多比较复杂的一些操作，例如： <ul><li>二级表格、三级表格</li><li>搜索项较多 10 多个，联动</li><li>编辑、排序</li></ul></li></ul><h3 id="高级搜索组件封装" tabindex="-1">高级搜索组件封装 <a class="header-anchor" href="#高级搜索组件封装" aria-label="Permalink to &quot;高级搜索组件封装&quot;">​</a></h3><ul><li>背景：由于告警上报量大，需要快速筛选出关键信息进行比对和二次查询</li><li>现象：基础搜索，如按名称、日期、告警终端等搜索出上百条类似告警，无法做到进一步筛选</li><li>难点：搜索项多，支持逻辑判断 or / and，要支持多种搜索形式，设计有复杂度</li><li>方案：组件封装，通过传入配置项来决定有哪些搜索项，如何搜索及展示</li></ul><h3 id="大屏" tabindex="-1">大屏 <a class="header-anchor" href="#大屏" aria-label="Permalink to &quot;大屏&quot;">​</a></h3>',14),o=[r];function n(u,s,h,d,c,_){return a(),i("div",null,o)}const p=l(t,[["render",n]]);export{m as __pageData,p as default};
