import{_ as p,E as h,c as e,J as a,m as s,a as n,V as l,o as t}from"./chunks/framework.ig3M3oij.js";const f=JSON.parse('{"title":"JavaScript 对象","description":"","frontmatter":{},"headers":[],"relativePath":"直击概念/02js/s_js_3-object.md","filePath":"直击概念/02js/s_js_3-object.md","lastUpdated":1708423104000}'),k={name:"直击概念/02js/s_js_3-object.md"},r=s("h1",{id:"javascript-对象",tabindex:"-1"},[n("JavaScript 对象 "),s("a",{class:"header-anchor",href:"#javascript-对象","aria-label":'Permalink to "JavaScript 对象"'},"​")],-1),d=s("p",null,"三大重要概念：类、原型、实例",-1),E=l("",26),c=l("",3),g=s("p",null,[n("最后一个 null，设计上是为了避免死循环而设置的, "),s("strong",null,"Object.prototype 的隐式原型指向 null"),n("。")],-1),o=s("h2",{id:"原型链继承",tabindex:"-1"},[n("原型链继承 "),s("a",{class:"header-anchor",href:"#原型链继承","aria-label":'Permalink to "原型链继承"'},"​")],-1),y=s("p",null,"所谓继承，简单说就是能通过子类实例访问父类的属性和方法。而利用原型链可以达成这样的目的，所以只要父类原型、子类原型、子类实例形成原型链关系即可。",-1),F=l("",19);function b(u,C,m,B,A,_){const i=h("Image");return t(),e("div",null,[r,d,a(i,{src:"/02js/object.jpg",alt:"JavaScript Object",inline:!1}),E,a(i,{src:"/02js/prototype.png",alt:"原型是实现继承的基础",inline:!1}),c,a(i,{src:"/02js/prototype2.png",alt:"对象的查找过程",inline:!1}),g,o,y,a(i,{src:"/02js/prototype3.png",alt:"子类原型作为父类的实力，形成原型链关系",inline:!1}),F])}const j=p(k,[["render",b]]);export{f as __pageData,j as default};
