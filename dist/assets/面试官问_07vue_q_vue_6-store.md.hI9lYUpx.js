import{_ as e,c as t,o as a,V as o}from"./chunks/framework.GzbH9VPN.js";const h=JSON.parse('{"title":"Vue store 状态管理相关","description":"","frontmatter":{},"headers":[],"relativePath":"面试官问/07vue/q_vue_6-store.md","filePath":"面试官问/07vue/q_vue_6-store.md","lastUpdated":1708423104000}'),s={name:"面试官问/07vue/q_vue_6-store.md"},r=o('<h1 id="vue-store-状态管理相关" tabindex="-1">Vue store 状态管理相关 <a class="header-anchor" href="#vue-store-状态管理相关" aria-label="Permalink to &quot;Vue store 状态管理相关&quot;">​</a></h1><p>vuex 解决的问题：存储用户全局状态并提供管理状态 API。</p><p>但状态管理不一定就是 Vuex。相关整理如下：</p><h2 id="如何去实现一个简易-vuex-说说你的思路" tabindex="-1">如何去实现一个简易 Vuex，说说你的思路 <a class="header-anchor" href="#如何去实现一个简易-vuex-说说你的思路" aria-label="Permalink to &quot;如何去实现一个简易 Vuex，说说你的思路&quot;">​</a></h2><details class="details custom-block"><summary>详细信息</summary><p>本质上还是问的：vuex 是什么及如何去实现的</p><p>vuex 是一个状态管理模式和库，并确保这些状态以可预期的方式变更，其实现思路：</p><ol><li>要实现一个 Store 存储全局状态</li><li>要提供修改状态所需 API：commit(type, payload), dispatch(type, payload)</li><li>实现 Store 时，可以定义 Store 类，构造函数接收选项 options，设置属性 state 对外暴露状态，提供 commit 和 dispatch 修改属性 state。这里需要设置 state 为响应式对象，同时将 Store 定义为一个 Vue 插件</li><li>commit(type, payload)方法中可以获取用户传入 mutations 并执行它，这样可以按用户提供的方法修改状态。 dispatch(type, payload)类似，但需要注意它可能是异步的，需要返回一个 Promise 给用户以处理异步结果</li></ol></details><blockquote><p>这里只是回答思路，具体代码实现请跳转： // todo: 手写简易vuex</p></blockquote>',6),i=[r];function l(u,_,c,p,d,n){return a(),t("div",null,i)}const v=e(s,[["render",l]]);export{h as __pageData,v as default};
