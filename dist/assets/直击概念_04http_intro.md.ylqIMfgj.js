import{_ as e,c as a,o as t,V as r}from"./chunks/framework.CMKosmpS.js";const q=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"直击概念/04http/intro.md","filePath":"直击概念/04http/intro.md","lastUpdated":1708674619000}'),o={name:"直击概念/04http/intro.md"},s=r('<blockquote><p>HTTP 前端重点考察。可能问得不多，但一定不会少。我在整理时也是作为重点整理了一番。 由于个人时间有限，这部分目前还没有来得及整理，我会在后续慢慢完善，请您谅解。 我暂时列出一个简单的待整理大纲。欢迎 Fork 本项目，和我一起来完善</p></blockquote><h2 id="osi-七层模型" tabindex="-1">OSI 七层模型 <a class="header-anchor" href="#osi-七层模型" aria-label="Permalink to &quot;OSI 七层模型&quot;">​</a></h2><p>✅</p><h2 id="浏览器的工作原理" tabindex="-1">浏览器的工作原理 <a class="header-anchor" href="#浏览器的工作原理" aria-label="Permalink to &quot;浏览器的工作原理&quot;">​</a></h2><p>✅</p><h2 id="http" tabindex="-1">HTTP <a class="header-anchor" href="#http" aria-label="Permalink to &quot;HTTP&quot;">​</a></h2><p>✅</p><h3 id="status-code" tabindex="-1">status code <a class="header-anchor" href="#status-code" aria-label="Permalink to &quot;status code&quot;">​</a></h3><p>✅</p><h3 id="request-headers" tabindex="-1">request headers <a class="header-anchor" href="#request-headers" aria-label="Permalink to &quot;request headers&quot;">​</a></h3><p>✅</p><h3 id="response-headers" tabindex="-1">response headers <a class="header-anchor" href="#response-headers" aria-label="Permalink to &quot;response headers&quot;">​</a></h3><p>✅</p><h2 id="https" tabindex="-1">HTTPS <a class="header-anchor" href="#https" aria-label="Permalink to &quot;HTTPS&quot;">​</a></h2><p>✅</p><h2 id="http-缓存" tabindex="-1">HTTP 缓存 <a class="header-anchor" href="#http-缓存" aria-label="Permalink to &quot;HTTP 缓存&quot;">​</a></h2><p>✅</p>',17),h=[s];function d(i,n,l,p,c,u){return t(),a("div",null,h)}const T=e(o,[["render",d]]);export{q as __pageData,T as default};
